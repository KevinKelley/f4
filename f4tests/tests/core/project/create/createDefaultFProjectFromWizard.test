--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _g4UEsMyOEeCqoItsrYQC5Q,_bsb1scyOEeCqoItsrYQC5Q,_ex81IMyOEeCqoItsrYQC5Q
Element-Name: createDefaultFProjectFromWizard
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _IyF-4O75EeCo8LZBmdU2EA
Runtime-Version: 2.1.0.201606221726
Save-Time: 7/6/16 2:36 PM
Tags: core/fantomproject/create
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

1. Press on "File" menu
2. Select "New->Other"
3. Verify that Fantom is presented in New window
4. Select Fantom project and press Next button
5. Set name of project and press "Finish" button
6. Make sure that fantom project is created
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-menu "File/New/Other..." | click
get-window New | get-editbox -after [get-label "Wizards:"] | set-text Fantom
with [get-window New | get-tree] {
    get-property itemCount | equals 1 | verify-true
    get-item Fantom | get-property caption | equals Fantom | verify-true
    get-item Fantom | get-property childCount | equals 6 | verify-true
    get-item "Fantom/Fantom Project" | get-property caption | equals "Fantom Project" | verify-true
}
get-window New | get-tree | select "Fantom/Fantom Project"
get-window New | get-button Finish | get-property enablement | equals false | verify-true
get-window New | get-button "Next >" | click
with [get-window "Create Fantom project"] {
    get-editbox -after [get-label "Project name:"] | set-text DefaultProject
    get-button Finish | click
}
with [get-view "Fantom Explorer" | get-tree] {
    get-property itemCount | equals 1 | verify-true
    get-item DefaultProject | get-property caption | equals DefaultProject | verify-true
    get-item DefaultProject | get-property childCount | equals 5 | verify-true
    get-item "DefaultProject/Fantom Native Libraries.*" | get-property caption 
        | equals "Fantom Native Libraries.*" | verify-true
    get-item "DefaultProject/JRE System Library.*" | get-property caption | equals "JRE System Library.*" 
        | verify-true
    get-item "DefaultProject/fan" | get-property caption | equals fan | verify-true
}
with [get-view "Fantom Explorer" | get-tree] {
    get-item "DefaultProject/fan" | get-property childCount | equals 0 | verify-true
    get-item "DefaultProject/fan" | get-property childCount | equals 0 | verify-true
    get-item "DefaultProject/build.fan" | get-property caption | equals "build.fan" | verify-true
    get-item "DefaultProject/Interpreter Libraries.*" | get-property caption 
        | equals "Interpreter Libraries.*" | verify-true
}
get-view "Fantom Explorer" | get-tree | select "DefaultProject/build.fan" | double-click -nowait
get-editor "build.fan" | get-text-viewer | get-property text 
    | equals "using build\n\n" +
    		 "class Build : BuildPod {\n\n" +
    		 "\tnew make() {\n" +
    		 "\t\tpodName = \"defaultProject\"\n" +
    		 "\t\tsummary = \"My Awesome DefaultProject Project\"\n" +
    		 "\t\tversion = Version(\"1.0\")\n\n" +
    		 "\t\tmeta = [\n\t\t\t\"proj.name\" : \"DefaultProject\"\n\t\t]\n\n" +
    		 "\t\tdepends = [\n\t\t\t\"sys 1.0\"\n\t\t]\n\n" +
    		 "\t\tsrcDirs = [`fan/`]\n" +
    		 "\t\tresDirs = [,]\n\n" +
    		 "\t\tdocApi = true\n" +
    		 "\t\tdocSrc = true\n" +
    		 "\t}\n}\n" 
    | verify-true
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--

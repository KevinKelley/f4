--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _g4UEsMyOEeCqoItsrYQC5Q,_ex81IMyOEeCqoItsrYQC5Q,_yyGwwMyOEeCqoItsrYQC5Q
Element-Name: createInternalEnum
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _kVTJYPMkEeC9XrHaQGXVxw
Runtime-Version: 2.1.0.201606221726
Save-Time: 7/6/16 2:09 PM
Tags: core/enum/create
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

1. Select project in Fantom Explorer
2. Select "New->Fantom Enum" in the context menu
3. Set "internal" radio-button
4. Make sure that internal enum is created and error is displayed in Problems view
5. Enter text in body enum class
6. Make sure that error is not displayed
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-view "Fantom Explorer" | get-tree | select fantest | get-menu "New/Fantom Enum" | click
with [get-window "New Fantom Enum"] {
    get-editbox -after [get-label "Name:"] | set-text TestEnum
    get-button internal | click
    get-button Finish | click
}
get-editor "TestEnum.fan" | get-text-viewer | get-property text | equals "\ninternal enum class TestEnum {\n\n}\n" | verify-true
get-view Problems | get-tree | get-property itemCount | equals 1 | verify-true
with [get-view Problems | get-tree] {
    get-item "Errors \\(1 item\\)" | get-property caption | equals "Errors (1 item)" | verify-true
    get-item "Errors \\(1 item\\)" | get-property childCount | equals 1 | verify-true
    get-item "Errors \\(1 item\\)/Expected identifier, not '}'" | get-property caption 
        | equals "Expected identifier, not '}'" | verify-true
    get-item "Errors \\(1 item\\)/Expected identifier, not '}'" | get-property columns -index 0 
        | equals "Expected identifier, not '}'" | verify-true
    get-item "Errors \\(1 item\\)/Expected identifier, not '}'" | get-property columns -index 1 | equals "TestEnum.fan" 
        | verify-true
    get-item "Errors \\(1 item\\)/Expected identifier, not '}'" | get-property columns -index 2 | equals "/fantest/fan" 
        | verify-true
    get-item "Errors \\(1 item\\)/Expected identifier, not '}'" | get-property columns -index 3 
        | equals "/fantest/fan/TestEnum.fan" | verify-true
    get-item "Errors \\(1 item\\)/Expected identifier, not '}'" | get-property columns -index 4 
        | equals "Fantom Problem" | verify-true
}
with [get-editor "TestEnum.fan" | get-editbox] {
    set-text-offset 0 3
    type-text red
    key-type "M1+s"
}
with [get-view "Fantom Explorer" | get-tree] {
    get-item fantest | get-property childCount | equals 5 | verify-true
    get-item "fantest/fan" | get-property childCount | equals 1 | verify-true
    get-item "fantest/fan/TestEnum.fan" | get-property caption | equals "TestEnum.fan" | verify-true
}
get-editor "TestEnum.fan" | get-text-viewer | get-property text | equals "\ninternal enum class TestEnum {\n\nred}\n" | verify-true
get-view Problems | get-tree | get-property itemCount | equals 0 | verify-true
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
